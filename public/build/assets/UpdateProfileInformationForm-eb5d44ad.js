import { D as k, u as b, g as m, d as t, t as o, a as l, b as a, e as u, w as d, j as x, v as V, h as p, n as w, T as S, f as B, o as f, L as N } from "./app-d78bf7b1.js"; import { _ as g, a as v, b as y } from "./TextInput-83747123.js"; import { _ as $ } from "./PrimaryButton-82810a57.js"; const C = { class: "text-lg font-medium text-gray-900 dark:text-gray-100" }, D = { class: "mt-1 text-sm text-gray-600 dark:text-gray-400" }, E = ["onSubmit"], P = { key: 0 }, T = { class: "text-sm mt-2 text-gray-800 dark:text-gray-200" }, U = { class: "flex items-center gap-4" }, q = { key: 0, class: "text-sm text-gray-600 dark:text-gray-400" }, z = { __name: "UpdateProfileInformationForm", props: { mustVerifyEmail: Boolean, status: String }, setup(_) { const c = _, i = k().props.auth.user, s = b({ name: i.name, email: i.email }), h = () => { s.patch(route("profile.update"), { preserveScroll: !0 }) }; return (e, r) => (f(), m("section", null, [t("header", null, [t("h2", C, o(e.lang().profile.profile_information), 1), t("p", D, o(e.lang().profile.update_profile), 1)]), t("form", { onSubmit: B(h, ["prevent"]), class: "mt-6 space-y-6" }, [t("div", null, [l(g, { for: "name", value: e.lang().label.name }, null, 8, ["value"]), l(v, { id: "name", type: "text", class: "mt-1 block w-full", modelValue: a(s).name, "onUpdate:modelValue": r[0] || (r[0] = n => a(s).name = n), required: "", autofocus: "", autocomplete: "name", placeholder: e.lang().placeholder.name }, null, 8, ["modelValue", "placeholder"]), l(y, { class: "mt-2", message: a(s).errors.name }, null, 8, ["message"])]), t("div", null, [l(g, { for: "email", value: e.lang().label.email }, null, 8, ["value"]), l(v, { id: "email", type: "email", class: "mt-1 block w-full", modelValue: a(s).email, "onUpdate:modelValue": r[1] || (r[1] = n => a(s).email = n), required: "", autocomplete: "email", placeholder: e.lang().placeholder.email }, null, 8, ["modelValue", "placeholder"]), l(y, { class: "mt-2", message: a(s).errors.email }, null, 8, ["message"])]), c.mustVerifyEmail && a(i).email_verified_at === null ? (f(), m("div", P, [t("p", T, [u(o(e.lang().profile.unverified_email) + " ", 1), l(a(N), { href: e.route("verification.send"), method: "post", as: "button", class: "underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary dark:focus:ring-offset-gray-800" }, { default: d(() => [u(o(e.lang().profile.resend_email_verification), 1)]), _: 1 }, 8, ["href"])]), x(t("div", { class: "mt-2 font-medium text-sm text-green-600 dark:text-green-400" }, o(e.lang().profile.sent_verification_email), 513), [[V, c.status === "verification-link-sent"]])])) : p("", !0), t("div", U, [l($, { class: w({ "opacity-25": a(s).processing }), disabled: a(s).processing }, { default: d(() => [u(o(a(s).processing ? e.lang().button.save + "..." : e.lang().button.save), 1)]), _: 1 }, 8, ["class", "disabled"]), l(S, { "enter-from-class": "opacity-0", "leave-to-class": "opacity-0", class: "transition ease-in-out" }, { default: d(() => [a(s).recentlySuccessful ? (f(), m("p", q, o(e.lang().profile.saved), 1)) : p("", !0)]), _: 1 })])], 40, E)])) } }; export { z as default };
